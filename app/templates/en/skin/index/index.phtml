<?php $f3 = \Base::instance();
$title = 'Home';
$f3->set('title', $title);
?>
<?=\View::instance()->render('/header.phtml'); ?>
<?=\View::instance()->render('/header-menu.phtml'); ?>

<div class="container">
    <div class="row">
        <div class="col-md-12">

            <h1><?=$title ?></h1>

            <?=\View::instance()->render('/notifications.phtml'); ?>

            This is a skin overriding the default file in templates/en/index/index.phtml
            <hr>

            <p>This project is by <a href="http://www.urunu.com">Vijay Mahrra</a> and it is built on, and serves as, an example of the <a href="http://fatfreeframework.com/home">Fat-Free Framework</a></p>

            <?=\Markdown::instance()->convert(nl2br($f3->read($f3->get('HOMEDIR') . '/README.md'))) ?>

            <?php
            $files = glob($f3->get('HOMEDIR') . '/docs/*.md');
            if (!empty($files)):
            ?>
            <ul>
                <?php foreach ($files as $f):
                    $f = basename($f, '.md');
                    ?>
                    <li><a href="/docs/<?=$f ?>"><?=$f ?></a></li>
                <?php endforeach ?>
            </ul>
            <?php endif ?>

            <h2>Installation</h2>

            <h3>File Permissions</h3>
            <pre>
<?php
foreach (array('LOGS', 'UPLOADS', 'TEMP') as $dir) {
    if (!is_writable($f3->get($dir))) {
        print "Directory: $dir NOT writable!\n";
    } else {
        print "Directory: $dir writable.\n";
    }
}
?>
            </pre>
<?php
$db = \Registry::get('db');
if (!empty($db)) {
?>

            <h3>Database</h3>
            <pre>
<?php
    try {
        $db = \Registry::get('db');
        $result = $db->exec('SHOW TABLES');
        print "Database: Connection OK.\n";
    } catch (\Exception $e) {
        print "Database failure!\n" . print_r($e,1);
    }
}
?>
            </pre>

            <h3>Geo-location</h3>
            <pre>
            <?php
            $geo = \Web\Geo::instance();
            var_dump($geo->location()); // locate client IP
            ?>
            </pre>

            <h3>Your device</h3>
            <p>
            <?php
            $audit = \Audit::instance();
            $bot = $audit->isbot();
            if ($bot) {
                print "You are a bot!";
            } else {
                $desktop = $audit->isdesktop();
                if ($desktop) {
                    print "You are on a desktop device!";
                } else {
                    $mobile = $audit->ismobile();
                    if ($mobile) {
                        print "You are on a mobile device!";
                    }
                }
            }
            ?>
            </p>

            <h3>Helpers</h3>
            <h4>Time/Date</h4>
            The example helper in lib/helpers/time.php can output the date/time in a mysql database format like '<?=\FFMVC\Helpers\Time::database() ?>' or for an http header '<?=\FFMVC\Helpers\Time::HTTP() ?>'

            <h4>String</h4>
            <ul>
                <li>Random String: <?=\FFMVC\Helpers\Str::random(20) ?></li>
                <li>Hashed+Salted String: <?=\FFMVC\Helpers\Str::salted(time(),
                    'f3-boilerplate') ?></li>
            </ul>

            <h2>Documentation</h2>
            <h1>Rest API</h1>

            <ul>
                <li><a href="/api/Test/request">API (JSON)</a>
            </ul>

        </div>
    </div>
  </div>

<?=\View::instance()->render('/footer-menu.phtml'); ?>
<?=\View::instance()->render('/footer.phtml'); ?>
